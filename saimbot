local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")

local AimbotEnabled = true
local AimPart = "HumanoidRootPart" -- ou "Head"
local AimFOV = 150

-- üîç Desenhar c√≠rculo de FOV (opcional visual)
local fovCircle = Drawing.new("Circle")
fovCircle.Radius = AimFOV
fovCircle.Color = Color3.new(1, 1, 1)
fovCircle.Thickness = 1
fovCircle.Filled = false
fovCircle.Transparency = 0.5

-- üîé WallCheck
local function hasLineOfSight(targetPart)
	local origin = Camera.CFrame.Position
	local direction = (targetPart.Position - origin)
	local rayParams = RaycastParams.new()
	rayParams.FilterType = Enum.RaycastFilterType.Blacklist
	rayParams.FilterDescendantsInstances = {LocalPlayer.Character, targetPart.Parent}

	local result = workspace:Raycast(origin, direction, rayParams)
	return result == nil
end

-- üéØ Fun√ß√£o que retorna o player v√°lido mais pr√≥ximo da mira
local function getClosestTarget()
	local closestPlayer = nil
	local shortestDistance = AimFOV

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(AimPart) then
			-- ‚úÖ Team Check
			if player.Team ~= LocalPlayer.Team then
				local targetPart = player.Character[AimPart]
				local screenPos, onScreen = Camera:WorldToViewportPoint(targetPart.Position)

				if onScreen then
					local mousePos = Vector2.new(Mouse.X, Mouse.Y)
					local targetPos2D = Vector2.new(screenPos.X, screenPos.Y)
					local distance = (mousePos - targetPos2D).Magnitude

					if distance < shortestDistance then
						-- üöß Wall Check
						if hasLineOfSight(targetPart) then
							closestPlayer = player
							shortestDistance = distance
						end
					end
				end
			end
		end
	end

	return closestPlayer
end

-- üîÅ Loop de Aimbot (suave)
RunService.RenderStepped:Connect(function()
	fovCircle.Position = Vector2.new(Mouse.X, Mouse.Y)

	if AimbotEnabled then
		local target = getClosestTarget()
		if target and target.Character and target.Character:FindFirstChild(AimPart) then
			local targetPos = target.Character[AimPart].Position
			local look = (targetPos - Camera.CFrame.Position).Unit
			local newCF = CFrame.new(Camera.CFrame.Position, Camera.CFrame.Position + look)
			Camera.CFrame = newCF
		end
	end
end)
